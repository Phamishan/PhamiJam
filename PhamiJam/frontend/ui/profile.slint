import { Button, VerticalBox, HorizontalBox, ProgressIndicator, GridBox } from "std-widgets.slint";
import { Page, Divider, HomeBtn, ProfileBtn, LibraryBtn, RecentPlaylistBtn } from "common.slint";

export component Profile inherits Window {
    property <float> count: 0;
    property <bool> paused: true;
    property <string> songName: "SANG";
    timer := Timer {
        interval: 1ms;
        running: false;
        triggered() => {
            if count >= 10 {
                self.running = false;
            }
            count = count + 0.01;
            debug(count);
        }
    }

    GridLayout {
        Row {
            Rectangle {
                background: #121212;
                width: 150px;
                VerticalBox {
                    padding: 25px;
                    alignment: space-around;
                    HomeBtn { }

                    Divider { }

                    ProfileBtn { }

                    Divider { }

                    LibraryBtn { }

                    Divider { }

                    RecentPlaylistBtn { }
                }
            }

            Rectangle {
                GridBox {
                    Row {
                        Image {
                            row: 2;
                            width: 250px;
                            height: 250px;
                            source: @image-url(".././assets/catPHOENIX.jpg");
                        }

                        Text {
                            text: "Phamishan";
                            font-size: 24px;
                        }
                    }
                }

                border-width: 10px;
                border-color: Colors.red;
            }

            Rectangle {
                HorizontalBox {
                    padding-top: 30px;
                    alignment: center;
                    Text {
                        text: "Now playing: " + songName;
                        font-size: 24px;
                    }

                    Button {
                        height: parent.height / 2;
                        icon: @image-url(".././assets/l.png");
                    }

                    Button {
                        height: parent.height / 2;
                        icon: paused ? @image-url(".././assets/play.png") : @image-url(".././assets/pause.png");
                        clicked() => {
                            paused = !paused;
                            timer.running = !paused;
                        }
                    }

                    Button {
                        height: parent.height / 2;
                        icon: @image-url(".././assets/r.png");
                    }
                }

                VerticalBox {
                    alignment: start;
                    padding-bottom: 100px;
                    ProgressIndicator {
                        padding-top: 100px;
                        height: 10px;
                        progress: count / 10;
                    }
                }

                background: #b5832e;
                height: 80px;
                colspan: 2;
                row: 1;
            }
        }
    }
}
